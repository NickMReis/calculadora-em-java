package calculadora;
import javax.swing.JOptionPane;


public class Janela extends javax.swing.JFrame {
    
    private Calculadora calculadora;
    
    public Janela() {
        initComponents();
        calculadora = new Calculadora();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        laCalculadoraOutput = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buNumero1 = new javax.swing.JButton();
        buNumero2 = new javax.swing.JButton();
        buNumero3 = new javax.swing.JButton();
        buNumero4 = new javax.swing.JButton();
        buNumero5 = new javax.swing.JButton();
        buNumero6 = new javax.swing.JButton();
        buNumero8 = new javax.swing.JButton();
        buNumero9 = new javax.swing.JButton();
        buNumero0 = new javax.swing.JButton();
        buNumero7 = new javax.swing.JButton();
        buPonto = new javax.swing.JButton();
        buDeletar = new javax.swing.JButton();
        buCalcular = new javax.swing.JButton();
        buSubtracao = new javax.swing.JButton();
        buSoma = new javax.swing.JButton();
        buDivisao = new javax.swing.JButton();
        buPorcentagem = new javax.swing.JButton();
        buAC = new javax.swing.JButton();
        buMultiplicacao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(119, 136, 153));

        laCalculadoraOutput.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        laCalculadoraOutput.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(laCalculadoraOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(laCalculadoraOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(58, 58, 58));

        buNumero1.setBackground(new java.awt.Color(105, 105, 105));
        buNumero1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero1.setForeground(new java.awt.Color(255, 255, 255));
        buNumero1.setText("1");
        buNumero1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero1ActionPerformed(evt);
            }
        });

        buNumero2.setBackground(new java.awt.Color(105, 105, 105));
        buNumero2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero2.setForeground(new java.awt.Color(255, 255, 255));
        buNumero2.setText("2");
        buNumero2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero2ActionPerformed(evt);
            }
        });

        buNumero3.setBackground(new java.awt.Color(105, 105, 105));
        buNumero3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero3.setForeground(new java.awt.Color(255, 255, 255));
        buNumero3.setText("3");
        buNumero3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero3ActionPerformed(evt);
            }
        });

        buNumero4.setBackground(new java.awt.Color(105, 105, 105));
        buNumero4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero4.setForeground(new java.awt.Color(255, 255, 255));
        buNumero4.setText("4");
        buNumero4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero4ActionPerformed(evt);
            }
        });

        buNumero5.setBackground(new java.awt.Color(105, 105, 105));
        buNumero5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero5.setForeground(new java.awt.Color(255, 255, 255));
        buNumero5.setText("5");
        buNumero5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero5ActionPerformed(evt);
            }
        });

        buNumero6.setBackground(new java.awt.Color(105, 105, 105));
        buNumero6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero6.setForeground(new java.awt.Color(255, 255, 255));
        buNumero6.setText("6");
        buNumero6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero6ActionPerformed(evt);
            }
        });

        buNumero8.setBackground(new java.awt.Color(105, 105, 105));
        buNumero8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero8.setForeground(new java.awt.Color(255, 255, 255));
        buNumero8.setText("8");
        buNumero8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero8ActionPerformed(evt);
            }
        });

        buNumero9.setBackground(new java.awt.Color(105, 105, 105));
        buNumero9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero9.setForeground(new java.awt.Color(255, 255, 255));
        buNumero9.setText("9");
        buNumero9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero9ActionPerformed(evt);
            }
        });

        buNumero0.setBackground(new java.awt.Color(105, 105, 105));
        buNumero0.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero0.setForeground(new java.awt.Color(255, 255, 255));
        buNumero0.setText("0");
        buNumero0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero0ActionPerformed(evt);
            }
        });

        buNumero7.setBackground(new java.awt.Color(105, 105, 105));
        buNumero7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buNumero7.setForeground(new java.awt.Color(255, 255, 255));
        buNumero7.setText("7");
        buNumero7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buNumero7ActionPerformed(evt);
            }
        });

        buPonto.setBackground(new java.awt.Color(105, 105, 105));
        buPonto.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buPonto.setForeground(new java.awt.Color(255, 255, 255));
        buPonto.setText(".");
        buPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buPontoActionPerformed(evt);
            }
        });

        buDeletar.setBackground(new java.awt.Color(105, 105, 105));
        buDeletar.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buDeletar.setForeground(new java.awt.Color(255, 255, 255));
        buDeletar.setText("Del");
        buDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buDeletarActionPerformed(evt);
            }
        });

        buCalcular.setBackground(new java.awt.Color(70, 130, 180));
        buCalcular.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buCalcular.setForeground(new java.awt.Color(255, 255, 255));
        buCalcular.setText("=");
        buCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buCalcularActionPerformed(evt);
            }
        });

        buSubtracao.setBackground(new java.awt.Color(112, 128, 144));
        buSubtracao.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buSubtracao.setForeground(new java.awt.Color(255, 255, 255));
        buSubtracao.setText("-");
        buSubtracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buSubtracaoActionPerformed(evt);
            }
        });

        buSoma.setBackground(new java.awt.Color(112, 128, 144));
        buSoma.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buSoma.setForeground(new java.awt.Color(255, 255, 255));
        buSoma.setText("+");
        buSoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buSomaActionPerformed(evt);
            }
        });

        buDivisao.setBackground(new java.awt.Color(112, 128, 144));
        buDivisao.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buDivisao.setForeground(new java.awt.Color(255, 255, 255));
        buDivisao.setText("/");
        buDivisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buDivisaoActionPerformed(evt);
            }
        });

        buPorcentagem.setBackground(new java.awt.Color(112, 128, 144));
        buPorcentagem.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buPorcentagem.setForeground(new java.awt.Color(255, 255, 255));
        buPorcentagem.setText("%");
        buPorcentagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buPorcentagemActionPerformed(evt);
            }
        });

        buAC.setBackground(new java.awt.Color(105, 89, 205));
        buAC.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buAC.setForeground(new java.awt.Color(255, 255, 255));
        buAC.setText("AC");
        buAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buACActionPerformed(evt);
            }
        });

        buMultiplicacao.setBackground(new java.awt.Color(112, 128, 144));
        buMultiplicacao.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        buMultiplicacao.setForeground(new java.awt.Color(255, 255, 255));
        buMultiplicacao.setText("*");
        buMultiplicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buMultiplicacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buNumero4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buNumero1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buNumero0, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buNumero7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buNumero8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buNumero5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(buAC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(buPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(buNumero3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buNumero6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buNumero9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(buMultiplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buSubtracao, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(buDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buDivisao, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buAC, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buNumero9, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buNumero8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buNumero7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buMultiplicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buNumero4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buNumero5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buNumero6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buSubtracao, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buNumero1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buNumero3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buNumero0, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    //Adicionar os numeros na label laCalculadoraOutput
    private void addNumeroLabel(String valor){
        String valorAtual = laCalculadoraOutput.getText();
        String novoValor;
        //adiciona apenas no caso em que não há o elemento "%"
        if(!valorAtual.contains("%")){
            novoValor = valorAtual + valor;
            laCalculadoraOutput.setText(String.format("%s", novoValor));
        }
    }
    
    //Botões dos números
    private void buNumero0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero0ActionPerformed
        addNumeroLabel(buNumero0.getText());
    }//GEN-LAST:event_buNumero0ActionPerformed

    private void buNumero1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero1ActionPerformed
        addNumeroLabel(buNumero1.getText());
    }//GEN-LAST:event_buNumero1ActionPerformed

    private void buNumero2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero2ActionPerformed
        addNumeroLabel(buNumero2.getText());
    }//GEN-LAST:event_buNumero2ActionPerformed

    private void buNumero3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero3ActionPerformed
        addNumeroLabel(buNumero3.getText());
    }//GEN-LAST:event_buNumero3ActionPerformed

    private void buNumero4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero4ActionPerformed
        addNumeroLabel(buNumero4.getText());
    }//GEN-LAST:event_buNumero4ActionPerformed

    private void buNumero5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero5ActionPerformed
        addNumeroLabel(buNumero5.getText());
    }//GEN-LAST:event_buNumero5ActionPerformed

    private void buNumero6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero6ActionPerformed
        addNumeroLabel(buNumero6.getText());
    }//GEN-LAST:event_buNumero6ActionPerformed

    private void buNumero7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero7ActionPerformed
        addNumeroLabel(buNumero7.getText());
    }//GEN-LAST:event_buNumero7ActionPerformed

    private void buNumero8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero8ActionPerformed
        addNumeroLabel(buNumero8.getText());
    }//GEN-LAST:event_buNumero8ActionPerformed

    private void buNumero9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buNumero9ActionPerformed
        addNumeroLabel(buNumero9.getText());
    }//GEN-LAST:event_buNumero9ActionPerformed

    private void buPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buPontoActionPerformed
        String valorAtual = laCalculadoraOutput.getText();
        String novoValor;
        char ultimoChar; // ultimo caractere da equacao
        boolean parteDoisEquacaoContem = true; // Verifica se a segunda parte da equação contém ponto
        boolean lastIsOperator; // verifica se o ultimo caractere é um operador

        // Não permite ponto como primeiro caractere ou quando há um operador sem número antes
        if (valorAtual.isEmpty() || valorAtual.contains("%")) {
            return;
        }

        ultimoChar = valorAtual.charAt(valorAtual.length() - 1);
        lastIsOperator = ultimoChar == '+' || ultimoChar == '-' || ultimoChar == '*' || ultimoChar == '/';

        // Se o último caractere for um operador, não permite adicionar o ponto
        if (lastIsOperator) {
            return;
        }
        // Se não existe nenhum ponto na equação, pode adicionar o ponto
        if (!valorAtual.contains(".")) {
            novoValor = valorAtual + buPonto.getText();
            laCalculadoraOutput.setText(novoValor);
            return;
        }

        // Caso já exista um ponto, verificar a segunda parte da equação
        int indexPlus = valorAtual.lastIndexOf("+");
        int indexMinus = valorAtual.lastIndexOf("-"); 
        int indexMultiply = valorAtual.lastIndexOf("*");
        int indexDivide = valorAtual.lastIndexOf("/");

        // Encontrar o índice do operador mais recente, o mais recente será o de maior indice.
        int operadorIndex = Math.max(Math.max(indexPlus, indexMinus), Math.max(indexMultiply, indexDivide));

        if (operadorIndex != -1) {
            // Verifica se já existe um ponto na parte após o operador
            parteDoisEquacaoContem = valorAtual.substring(operadorIndex + 1).contains("."); 
        } else {
            // Se não houver operador, tratamos como uma equação simples
            parteDoisEquacaoContem = valorAtual.contains(".");
        }

        // Se ainda não há ponto na segunda parte da equação, pode adicionar
        if (!parteDoisEquacaoContem) {
            novoValor = valorAtual + buPonto.getText();
            laCalculadoraOutput.setText(novoValor);
        }
    }//GEN-LAST:event_buPontoActionPerformed

    
    
    //Limpar Label e Backspace
    private void buACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buACActionPerformed
        laCalculadoraOutput.setText(""); //torna a label vazia
    }//GEN-LAST:event_buACActionPerformed

    private void buDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buDeletarActionPerformed
        String valorAtual = laCalculadoraOutput.getText();
        String novoValor;
        //deleta o ultimo elemento apenas se não for uma string vazia
        if(!valorAtual.isEmpty()){
            novoValor = valorAtual.substring(0, valorAtual.length() - 1);
            laCalculadoraOutput.setText(String.format("%s", novoValor));
        }
    }//GEN-LAST:event_buDeletarActionPerformed
    
    
    
    //Adicionar Operadores
    private void addOperadores(String operador){
        String valorAtual = laCalculadoraOutput.getText();
        String novoValor;
        
        if(valorAtual.isEmpty()){
            return;
        }
        
        boolean temOperador = valorAtual.contains("%") || 
                          (valorAtual.indexOf("+") > 0) || 
                          (valorAtual.indexOf("-") > 0) || 
                          valorAtual.contains("*") || 
                          valorAtual.contains("/");
       
        int firstIndexMinus = valorAtual.indexOf("-");
        int lastIndexMinus = valorAtual.lastIndexOf("-");
       
        //restringe a adição de outros operadores apos o exemplo -x-y
        if(lastIndexMinus == firstIndexMinus){
            ; //bloco vazio
        }else if(firstIndexMinus == 0 && lastIndexMinus < valorAtual.length() - 1 && lastIndexMinus != 0){
            return;
        }
        
        // restringe a adição de outros operadores caso o valor atual só tenha o "-" e se o ultimo item do valor é "-"
        if (valorAtual.equals("-") || valorAtual.substring(valorAtual.length() - 1).equals("-")){
            return;
        }

        // Adicionar o operador se ainda não houver operadores na equação e não for vazio
        if (!temOperador && !valorAtual.isEmpty()) {
            novoValor = valorAtual + operador;
            laCalculadoraOutput.setText(String.format("%s", novoValor));
        }
    }
    
    private void addOperadorSubtracao(String operador){
        String valorAtual = laCalculadoraOutput.getText();
        String ultimaString;
        String novoValor;
        
        if(valorAtual.isEmpty()){
            novoValor = valorAtual + operador;
            laCalculadoraOutput.setText(String.format("%s", novoValor));
            return;
        }
        
        int firstIndexMinus = valorAtual.indexOf("-");
        int lastIndexMinus = valorAtual.lastIndexOf("-");
        ultimaString = valorAtual.substring(valorAtual.length() - 1);
        
        if(valorAtual.indexOf("-") == 0 && valorAtual.length() <= 1){
            return;
        }
        //não permite add "-" se o primeiro indice do menos for 0 e o ultimo for diferente de 0 e menor que a ultima posição da String
        if(firstIndexMinus == 0 && lastIndexMinus < valorAtual.length() - 1 && lastIndexMinus != 0){
            return;
        }
        
        int indexPlus = valorAtual.lastIndexOf("+");
        int indexMultiply = valorAtual.lastIndexOf("*");
        int indexDivide = valorAtual.lastIndexOf("/");
        
        //verifica se tem +, * e /. Se não tiver, segue a função. mas se tiver e não forem a ultima posição, fecha a função sem add nada
        if(!valorAtual.contains("+") && !valorAtual.contains("*") && !valorAtual.contains("/")){
            ; //bloco vazio ou seja não vai fazer nada
        }else if (indexPlus < valorAtual.length() - 1 && indexMultiply < valorAtual.length() - 1 && indexDivide < valorAtual.length() - 1){
                return;
            }
        
        //se houver +-, --, *- ou /-, mantem o mesmo valor atual
        if(valorAtual.contains("+-") || valorAtual.contains("--") || valorAtual.contains("*-") || valorAtual.contains("/-") || valorAtual.contains("%")){
            laCalculadoraOutput.setText(String.format("%s", valorAtual));
        } else{
            // se não tem "-" ou "-" for a ultima string, add "-" no valor
            if(!valorAtual.contains("-") || ultimaString.equals("-")){
                novoValor = valorAtual + operador;
                laCalculadoraOutput.setText(String.format("%s", novoValor));
            }
            //se o indice de "-" for 0, add "-" também
            if(firstIndexMinus == 0){
                novoValor = valorAtual + operador;
                laCalculadoraOutput.setText(String.format("%s", novoValor));
            }
        }
    }
    
    //Botões dos operadores
    private void buSomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buSomaActionPerformed
        addOperadores(buSoma.getText());
    }//GEN-LAST:event_buSomaActionPerformed

    private void buSubtracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buSubtracaoActionPerformed
        addOperadorSubtracao(buSubtracao.getText());
    }//GEN-LAST:event_buSubtracaoActionPerformed

    private void buMultiplicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buMultiplicacaoActionPerformed
        addOperadores(buMultiplicacao.getText());
    }//GEN-LAST:event_buMultiplicacaoActionPerformed

    private void buDivisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buDivisaoActionPerformed
        addOperadores(buDivisao.getText());
    }//GEN-LAST:event_buDivisaoActionPerformed

    private void buPorcentagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buPorcentagemActionPerformed
        addOperadores(buPorcentagem.getText());
    }//GEN-LAST:event_buPorcentagemActionPerformed
    
    
    
    //Botão de calcular
    private void buCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buCalcularActionPerformed
        String valorAtual = laCalculadoraOutput.getText();
        String novoValor; //valor a ser passado para a label
        String stringNumero1; //captura da primeira numero (antes do operador) da equação
        String operador; // captura do operador
        String stringNumero2; //captura da segunda numero (depois do operador) da equação 
        double numero1; 
        double numero2;
        double resultado = 0; //resultado da operacao
                
        //Não calcula se valorAtual for uma string vazia
        if(valorAtual.isEmpty()){
            return;
        }
        
        //Não calcula se não tiver operador ou se op ultimo caracter for um operador
        boolean naoTemOperador = !valorAtual.contains("+") && !valorAtual.contains("*") && !valorAtual.contains("/") && !valorAtual.contains("%") && (!valorAtual.contains("-") || valorAtual.lastIndexOf("-") == 0);
        boolean lastIsOperator = valorAtual.indexOf("+") == valorAtual.length() - 1 || valorAtual.indexOf("*") == valorAtual.length() - 1 || valorAtual.indexOf("/") == valorAtual.length() - 1 || valorAtual.lastIndexOf("-") == valorAtual.length() - 1;
        if(naoTemOperador || lastIsOperator){
            return;
        } 
        
        //Calculo da porcentagem
        if(valorAtual.contains("%")){
            //captura tudo o que vem antes da porcentagem e calcula porcentagem
            stringNumero1 = valorAtual.substring(0, valorAtual.length() - 1);
            numero1 = Double.parseDouble(stringNumero1);
            resultado = calculadora.executarCalculoPorcentagem(numero1);           
        }
        
        //Calcular soma
        if(valorAtual.contains("+")){
            operador = "+";
            
            //separa a string para obter numero1 e numero2 e depois as converte para double
            stringNumero1 = valorAtual.substring(0, valorAtual.indexOf(operador));
            numero1 = Double.parseDouble(stringNumero1);
            stringNumero2 = valorAtual.substring(valorAtual.indexOf(operador) + 1);
            numero2 = Double.parseDouble(stringNumero2);
            
            //calcula soma
            resultado = calculadora.executarSoma(numero1, numero2);
        }
        
        //Calcular multiplicação
        if(valorAtual.contains("*")){
            operador = "*";
            
            //separa a string para obter numero1 e numero2 e depois as converte para double
            stringNumero1 = valorAtual.substring(0, valorAtual.indexOf(operador));
            numero1 = Double.parseDouble(stringNumero1);
            stringNumero2 = valorAtual.substring(valorAtual.indexOf(operador) + 1);
            numero2 = Double.parseDouble(stringNumero2);
            
            //calcula multiplicação
            resultado = calculadora.executarMultiplicacao(numero1, numero2);
        }
        
        //Calcular divisão
        if(valorAtual.contains("/")){
            operador = "/";
            
            //separa a string para obter numero1 e numero2 e depois as converte para double
            stringNumero1 = valorAtual.substring(0, valorAtual.indexOf(operador));
            numero1 = Double.parseDouble(stringNumero1);
            stringNumero2 = valorAtual.substring(valorAtual.indexOf(operador) + 1);
            numero2 = Double.parseDouble(stringNumero2);
            
            //evitar divisão por zero com mensagem de erro
            if(numero2 == 0){
                JOptionPane.showMessageDialog(null, "It's not possible to divide by 0!");
                laCalculadoraOutput.setText("");
                return;
            }
            //calcula divisão
            resultado = calculadora.executarDivisao(numero1, numero2);
        }
        
        //verifica se não tem outros operadores na equação
        boolean naoContemOutrosOperadores = !valorAtual.contains("+") && !valorAtual.contains("*") && !valorAtual.contains("/");
        
        //calcula a divisão se conter "-", tiver "-" depois da primeira posição e não ter outros operadores
        if(valorAtual.contains("-") && valorAtual.lastIndexOf("-") != 0 && naoContemOutrosOperadores){
            operador = "-";
            
            //caso ter duplo "-". exemplo: 2--2, separar corretamente para evitar erro.
            if(valorAtual.contains("--")){
                //separa em duas strings numero1 e numero2 representando numeros
                stringNumero1 = valorAtual.substring(0, valorAtual.lastIndexOf(operador) - 1);
                stringNumero2 = valorAtual.substring(valorAtual.lastIndexOf(operador));
            } else{ 
                //separa em duas strings numero1 e numero2 representando numeros
                stringNumero1 = valorAtual.substring(0, valorAtual.lastIndexOf(operador));
                stringNumero2 = valorAtual.substring(valorAtual.lastIndexOf(operador) + 1);
            }
            
            //converter as strings para double e calcular subtração
            numero1 = Double.parseDouble(stringNumero1);
            numero2 = Double.parseDouble(stringNumero2);
            resultado = calculadora.executarSubtracao(numero1, numero2);
        }
        
        novoValor = String.format("%f",resultado); //conversão de resultado para string
        
        //substituir o caracter "," para "." para evitar futuros problemas de cálculo
        if(novoValor.contains(",")){
            novoValor = novoValor.replace(",", ".");
        }
        
        //verifica se contém "."
        if(novoValor.contains(".")){
            String charAtual; //representar caractere atual
            
            for(int i = novoValor.length() - 1; i > novoValor.indexOf("."); i--){
                charAtual = novoValor.substring(novoValor.length() - 1); //percorrendo cada posição da string novoValor
                //se não for 0, quebra
                if (!charAtual.equals("0")){
                    break;
                }
                //remove os zeros da direita
                novoValor = novoValor.substring(0, i);
            }
        }
        
        //remover ".", caso seja a última string
        if (novoValor.endsWith(".")) {
            novoValor = novoValor.substring(0, novoValor.length() - 1);
        }
        
        //colocar resultado na label
        laCalculadoraOutput.setText(novoValor);
    }//GEN-LAST:event_buCalcularActionPerformed
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Janela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Janela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buAC;
    private javax.swing.JButton buCalcular;
    private javax.swing.JButton buDeletar;
    private javax.swing.JButton buDivisao;
    private javax.swing.JButton buMultiplicacao;
    private javax.swing.JButton buNumero0;
    private javax.swing.JButton buNumero1;
    private javax.swing.JButton buNumero2;
    private javax.swing.JButton buNumero3;
    private javax.swing.JButton buNumero4;
    private javax.swing.JButton buNumero5;
    private javax.swing.JButton buNumero6;
    private javax.swing.JButton buNumero7;
    private javax.swing.JButton buNumero8;
    private javax.swing.JButton buNumero9;
    private javax.swing.JButton buPonto;
    private javax.swing.JButton buPorcentagem;
    private javax.swing.JButton buSoma;
    private javax.swing.JButton buSubtracao;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel laCalculadoraOutput;
    // End of variables declaration//GEN-END:variables
}
